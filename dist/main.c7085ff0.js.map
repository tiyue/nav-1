{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hasMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","console","log","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,SAAS,GAAGC,CAAC,CAAC,WAAD,CAAjB;AACA,IAAIC,OAAO,GAAGF,SAAS,CAACG,IAAV,CAAe,SAAf,CAAd;AACA,IAAIC,CAAC,GAAGC,YAAY,CAACC,OAAb,CAAqB,GAArB,CAAR;AACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAd;AAEA,IAAIM,MAAM,GAAGH,OAAO,IAAI,CACpB;AAAEI,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,GAAG,EAAE;AAAlB,CADoB,EACwB;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,GAAG,EAAE;AAAlB,CADxB,CAAxB;;AAGA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAACD,GAAD,EAAS;AACvB,SAAOA,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACFA,OADE,CACM,SADN,EACiB,EADjB,EAEFA,OAFE,CAEM,MAFN,EAEc,EAFd,EAGFA,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP,CADuB,CAIE;AAC5B,CALD;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBf,EAAAA,SAAS,CAACG,IAAV,CAAe,eAAf,EAAgCa,MAAhC;AACAN,EAAAA,MAAM,CAACO,OAAP,CAAe,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5B,QAAIC,GAAG,GAAGnB,CAAC,uIAIyBiB,IAAI,CAACP,IAAL,CAAU,CAAV,CAJzB,iEAKyBE,WAAW,CAACK,IAAI,CAACN,GAAN,CALpC,+SAAD,CAaGS,YAbH,CAagBnB,OAbhB,CAAV;AAcAkB,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,MAAAA,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACN,GAAjB;AACH,KAFD;AAGAQ,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC7BA,MAAAA,CAAC,CAACC,eAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACAA,MAAAA,MAAM,CAACmB,MAAP,CAAcV,KAAd,EAAqB,CAArB;AACAJ,MAAAA,MAAM;AACT,KALD;AAMH,GAxBD;AAyBH,CA3BD;;AA4BAA,MAAM;AACNd,CAAC,CAAC,YAAD,CAAD,CACKqB,EADL,CACQ,OADR,EACiB,YAAM;AACf,MAAIV,GAAG,GAAGW,MAAM,CAACO,MAAP,CAAc,OAAd,CAAV;;AACA,MAAIlB,GAAG,CAACmB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC3BnB,IAAAA,GAAG,GAAG,aAAaA,GAAnB;AACH;;AACDF,EAAAA,MAAM,CAACsB,IAAP,CAAY;AACRrB,IAAAA,IAAI,EAAEE,WAAW,CAACD,GAAD,CAAX,CAAiB,CAAjB,EAAoBqB,WAApB,EADE;AAERrB,IAAAA,GAAG,EAAEA;AAFG,GAAZ;AAIAG,EAAAA,MAAM;AACT,CAXL;;AAaAQ,MAAM,CAACW,cAAP,GAAwB,YAAM;AAC1B,MAAIC,MAAM,GAAG3B,IAAI,CAAC4B,SAAL,CAAe1B,MAAf,CAAb;AACAL,EAAAA,YAAY,CAACgC,OAAb,CAAqB,GAArB,EAA0BF,MAA1B;AACH,CAHD;AAIA","file":"main.c7085ff0.js","sourceRoot":"..\\src","sourcesContent":["let $siteList = $('.siteList')\r\nlet $lastLi = $siteList.find('li.last')\r\nlet x = localStorage.getItem('x')\r\nlet xObject = JSON.parse(x)\r\n\r\nlet hasMap = xObject || [\r\n    { logo: 'A', url: 'https://www.acfun.cn' }, { logo: 'b', url: 'http://www.bilibili.com' },\r\n]\r\nlet simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') // 删除 / 开头的内容\r\n}\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    hasMap.forEach((node, index) => {\r\n        let $li = $(`\r\n            <li>\r\n                \r\n                    <div class=\"site\">\r\n                        <div class=\"logo\">${node.logo[0]}</div>\r\n                        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                        <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                        </svg>\r\n                        </div>\r\n                    </div>\r\n                \r\n            </li >`).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()\r\n            console.log(hasMap)\r\n            hasMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\nrender()\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('新增网址为')\r\n        if (url.indexOf('http') !== 0) {\r\n            url = 'https://' + url\r\n        }\r\n        hasMap.push({\r\n            logo: simplifyUrl(url)[0].toUpperCase(),\r\n            url: url\r\n        });\r\n        render()\r\n    });\r\n\r\nwindow.onbeforeunload = () => {\r\n    let string = JSON.stringify(hasMap)\r\n    localStorage.setItem('x', string)\r\n}\r\n/*$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hasMap.length; i++) {\r\n        if (hasMap[i].logo.toLowerCase() === key) {\r\n            window.open(hasMap[i].url)\r\n        }\r\n    }\r\n})*/\r\n\r\n\r\n"]}